@page "/Parks/{ParkName}"
@using MudBlazor
@using SQL_API
@using SQL_API.Models
@using SQL_API.Data
@inject IMenuData _dbMenu;

<h3></h3>
<MudText Typo="Typo.h2" Align="Align.Center">@(Menu != null ? Menu.ParkName: "Park not found")</MudText>
<MudText Typo="Typo.subtitle1">@(Menu != null ? Menu.ParkDescription : "Park not found - desc")</MudText>
<MudDivider></MudDivider>
<MudSelect T="string" Label="Coffee" AnchorOrigin="Origin.BottomCenter">
    <MudSelectItem Value="@("Cappuccino")" />
    <MudSelectItem Value="@("Cafe Latte")" />
    <MudSelectItem Value="@("Espresso")" />
</MudSelect> 
@if (MenuList != null && MenuList.Any() && testing)
{
    foreach (MenuModel food in MenuList)
    {
        @if (!food.AreaName.Equals(CurrentArea) || PrintCount == 0)
        {
            <MudText Typo="Typo.h3" Style="margin-left: 10px; text-decoration: underline;">@(food != null ? food.AreaName : "Park not found - Area")</MudText>

        }
        @if (!food.LocationName.Equals(CurrentLocation) || PrintCount == 0)
        {
            <MudText Typo="Typo.h4" Style="margin-left: 30px;">@(food != null ? food.LocationName : "Park not found - Loc")</MudText>
        }
        <MudText Typo="Typo.h5" Style="margin-left: 50px;">@food.FoodName - $@food.Price </MudText>
        @if (true)
        {
            PrintCount++;
            CurrentLocation = food.LocationName;
            CurrentArea = food.AreaName;
        }


    }
}
@code {
    List<MenuModel> MenuList = new List<MenuModel>();
    MenuModel Menu = null;
    Boolean testing = true;
    String CurrentArea;
    String CurrentLocation;
    int PrintCount;
    [Parameter] public string ParkName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MenuList = await _dbMenu.GetParkMenuData(ParkName);

        if (MenuList != null && MenuList.Count > 0)
        {
            Menu = MenuList.First();
            CurrentArea = Menu.AreaName;
            CurrentLocation = Menu.LocationName;
            PrintCount = 0;
        }
    }
}
