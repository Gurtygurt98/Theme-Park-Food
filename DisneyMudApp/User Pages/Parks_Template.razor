@page "/Parks/{ParkName}"
@using MudBlazor
@using SQL_API
@using SQL_API.Models
@using SQL_API.Data
@inject IMenuData _dbMenu;

<h3></h3>
<MudText Typo="Typo.h1" Align="Align.Center">@(Menu != null ? Menu.ParkName: "Park not found")</MudText>
<MudText Typo="Typo.subtitle1">@(Menu != null ? Menu.ParkDescription : "Park not found - desc")</MudText>
<MudDivider></MudDivider>
<MudSelect T="string" Label="Coffee" AnchorOrigin="Origin.BottomCenter">
    <MudSelectItem Value="@("Cappuccino")" />
    <MudSelectItem Value="@("Cafe Latte")" />
    <MudSelectItem Value="@("Espresso")" />
</MudSelect> 
@if (MenuList != null && MenuList.Any() && testing)
{
    <MudDataGrid Items="MenuList" Virtualize="true" Striped="true">
        <Columns>
            <PropertyColumn Property="x => x.FoodName" Title="Food Name" />
            <PropertyColumn Property="x => x.Price" Title="Price" />
            <PropertyColumn Property="x => x.FoodDescription" Title="Description" />
            <PropertyColumn Property="x => x.Allergy" Title="Allergies" />
            <PropertyColumn Property="x => x.Tags" Title="Tags"/>
            </Columns>
    </MudDataGrid>
}
@code {
    List<MenuModel> MenuList = new List<MenuModel>();
    MenuModel Menu = null;
    Boolean testing = true;
    [Parameter] public string ParkName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MenuList = await _dbMenu.GetParkMenuData(ParkName);

        if (MenuList != null && MenuList.Count > 0)
        {
            Menu = MenuList.First();
        }
    }
}
