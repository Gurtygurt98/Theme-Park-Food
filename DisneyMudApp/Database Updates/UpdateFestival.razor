@page "/UpdateFestival"
@using DisneyMudApp
@using MudBlazor
@using SQL_API.Data
@using SQL_API.Models
@inject IFestivalData _db;
<MudText Typo="Typo.h2">Festival Form</MudText>
<MudForm @ref="formRef">
    <MudGrid>
        <MudItem xs="10">
            <MudStack>
                <MudTextField Label="Festival Name" @bind-Value="FestivalName" />
                <MudTextField Label="Location" @bind-Value="Location" />
                <MudTextField Label="Description" @bind-Value="Description" Lines="3" />
            </MudStack>
        </MudItem>
        <MudItem xs="4">
            <MudDatePicker Label="Start Date" @bind-Date="StartDate" />
        </MudItem>
        <MudItem xs="4">
            <MudDatePicker Label="End Date" @bind-Date="EndDate" />
        </MudItem>
        <MudItem xs="4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" OnClick="Submit">Submit</MudButton>
        </MudItem>
    </MudGrid>
</MudForm>

@code {
    string? FestivalName = "";
    DateTime? StartDate = DateTime.Today;
    DateTime? EndDate = DateTime.Today.AddDays(1);
    string? Location = "";
    string? Description = "";
    private MudForm? formRef;
    private bool debug = true;

    public async Task  Submit()
    {
        string startDateString = StartDate.Value.ToString("MM.dd.yyyy");
        string endDateString = EndDate.Value.ToString("MM.dd.yyyy");
        Console.WriteLine("Festival Name: " + FestivalName);
        Console.WriteLine("Start Date: " + startDateString);
        Console.WriteLine("End Date: " + endDateString);
        Console.WriteLine("Location: " + Location);
        Console.WriteLine("Description: " + Description);
        await _db.insertFestivalJob(new FestivalModel(FestivalName, Location, startDateString, endDateString, Description));
        await formRef.ResetAsync();
    }

}
